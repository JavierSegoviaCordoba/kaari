[{"name":"abstract fun state(): State","description":"com.javiersc.kaari.presentation.core.KaariPresentation.state","location":"kaari-presentation-core/com.javiersc.kaari.presentation.core/-kaari-presentation/state.html","searchKeys":["state","abstract fun state(): State","com.javiersc.kaari.presentation.core.KaariPresentation.state"]},{"name":"abstract val events: MutableSharedFlow<Effect>","description":"com.javiersc.kaari.presentation.core.KaariPresentation.events","location":"kaari-presentation-core/com.javiersc.kaari.presentation.core/-kaari-presentation/events.html","searchKeys":["events","abstract val events: MutableSharedFlow<Effect>","com.javiersc.kaari.presentation.core.KaariPresentation.events"]},{"name":"abstract val scope: CoroutineScope","description":"com.javiersc.kaari.presentation.core.KaariPresentation.scope","location":"kaari-presentation-core/com.javiersc.kaari.presentation.core/-kaari-presentation/scope.html","searchKeys":["scope","abstract val scope: CoroutineScope","com.javiersc.kaari.presentation.core.KaariPresentation.scope"]},{"name":"interface KaariPresentation<Effect, State>","description":"com.javiersc.kaari.presentation.core.KaariPresentation","location":"kaari-presentation-core/com.javiersc.kaari.presentation.core/-kaari-presentation/index.html","searchKeys":["KaariPresentation","interface KaariPresentation<Effect, State>","com.javiersc.kaari.presentation.core.KaariPresentation"]},{"name":"open fun CollectedEffect(block: suspend CoroutineScope.(effect: Effect) -> Unit)","description":"com.javiersc.kaari.presentation.core.KaariPresentation.CollectedEffect","location":"kaari-presentation-core/com.javiersc.kaari.presentation.core/-kaari-presentation/-collected-effect.html","searchKeys":["CollectedEffect","open fun CollectedEffect(block: suspend CoroutineScope.(effect: Effect) -> Unit)","com.javiersc.kaari.presentation.core.KaariPresentation.CollectedEffect"]},{"name":"open fun effect(effect: () -> Effect)","description":"com.javiersc.kaari.presentation.core.KaariPresentation.effect","location":"kaari-presentation-core/com.javiersc.kaari.presentation.core/-kaari-presentation/effect.html","searchKeys":["effect","open fun effect(effect: () -> Effect)","com.javiersc.kaari.presentation.core.KaariPresentation.effect"]},{"name":"open fun effect(effect: Effect)","description":"com.javiersc.kaari.presentation.core.KaariPresentation.effect","location":"kaari-presentation-core/com.javiersc.kaari.presentation.core/-kaari-presentation/effect.html","searchKeys":["effect","open fun effect(effect: Effect)","com.javiersc.kaari.presentation.core.KaariPresentation.effect"]},{"name":"abstract class KaariPresenter<Effect, State>(val scope: CoroutineScope)","description":"com.javiersc.kaari.presenter.KaariPresenter","location":"kaari-presenter/com.javiersc.kaari.presenter/-kaari-presenter/index.html","searchKeys":["KaariPresenter","abstract class KaariPresenter<Effect, State>(val scope: CoroutineScope)","com.javiersc.kaari.presenter.KaariPresenter"]},{"name":"constructor(scope: CoroutineScope)","description":"com.javiersc.kaari.presenter.KaariPresenter.KaariPresenter","location":"kaari-presenter/com.javiersc.kaari.presenter/-kaari-presenter/-kaari-presenter.html","searchKeys":["KaariPresenter","constructor(scope: CoroutineScope)","com.javiersc.kaari.presenter.KaariPresenter.KaariPresenter"]},{"name":"open val events: MutableSharedFlow<Effect>","description":"com.javiersc.kaari.presenter.KaariPresenter.events","location":"kaari-presenter/com.javiersc.kaari.presenter/-kaari-presenter/events.html","searchKeys":["events","open val events: MutableSharedFlow<Effect>","com.javiersc.kaari.presenter.KaariPresenter.events"]},{"name":"open val scope: CoroutineScope","description":"com.javiersc.kaari.presenter.KaariPresenter.scope","location":"kaari-presenter/com.javiersc.kaari.presenter/-kaari-presenter/scope.html","searchKeys":["scope","open val scope: CoroutineScope","com.javiersc.kaari.presenter.KaariPresenter.scope"]},{"name":"abstract class KaariViewModel<Effect, State>(val scope: CoroutineScope) : ViewModel","description":"com.javiersc.kaari.viewmodel.KaariViewModel","location":"kaari-viewmodel/com.javiersc.kaari.viewmodel/-kaari-view-model/index.html","searchKeys":["KaariViewModel","abstract class KaariViewModel<Effect, State>(val scope: CoroutineScope) : ViewModel","com.javiersc.kaari.viewmodel.KaariViewModel"]},{"name":"constructor()","description":"com.javiersc.kaari.viewmodel.ViewModel.ViewModel","location":"kaari-viewmodel/com.javiersc.kaari.viewmodel/-view-model/-view-model.html","searchKeys":["ViewModel","constructor()","com.javiersc.kaari.viewmodel.ViewModel.ViewModel"]},{"name":"constructor(scope: CoroutineScope)","description":"com.javiersc.kaari.viewmodel.KaariViewModel.KaariViewModel","location":"kaari-viewmodel/com.javiersc.kaari.viewmodel/-kaari-view-model/-kaari-view-model.html","searchKeys":["KaariViewModel","constructor(scope: CoroutineScope)","com.javiersc.kaari.viewmodel.KaariViewModel.KaariViewModel"]},{"name":"expect abstract class ViewModel","description":"com.javiersc.kaari.viewmodel.ViewModel","location":"kaari-viewmodel/com.javiersc.kaari.viewmodel/-view-model/index.html","searchKeys":["ViewModel","expect abstract class ViewModel","com.javiersc.kaari.viewmodel.ViewModel"]},{"name":"expect abstract val scope: CoroutineScope","description":"com.javiersc.kaari.viewmodel.ViewModel.scope","location":"kaari-viewmodel/com.javiersc.kaari.viewmodel/-view-model/scope.html","searchKeys":["scope","expect abstract val scope: CoroutineScope","com.javiersc.kaari.viewmodel.ViewModel.scope"]},{"name":"open override val scope: CoroutineScope","description":"com.javiersc.kaari.viewmodel.KaariViewModel.scope","location":"kaari-viewmodel/com.javiersc.kaari.viewmodel/-kaari-view-model/scope.html","searchKeys":["scope","open override val scope: CoroutineScope","com.javiersc.kaari.viewmodel.KaariViewModel.scope"]},{"name":"open val events: MutableSharedFlow<Effect>","description":"com.javiersc.kaari.viewmodel.KaariViewModel.events","location":"kaari-viewmodel/com.javiersc.kaari.viewmodel/-kaari-view-model/events.html","searchKeys":["events","open val events: MutableSharedFlow<Effect>","com.javiersc.kaari.viewmodel.KaariViewModel.events"]}]